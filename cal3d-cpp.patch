--- cal3d/src/cal3d/loader.cpp.orig	2017-03-18 02:03:16.000000000 +0100
+++ cal3d/src/cal3d/loader.cpp	2020-03-22 07:42:12.046005069 +0100
@@ -1308,7 +1308,7 @@
   if(!dataSrc.ok())
   {
     dataSrc.setError();
-    return false;
+    return 0;
   }
 
   // allocate a new core keyframe instance
@@ -1928,11 +1928,11 @@
       CalCoreSubMorphTarget * morphTarget = new CalCoreSubMorphTarget();
       if( !morphTarget ) {
          dataSrc.setError();
-         return false;
+         return 0;
       }
       if( !morphTarget->reserve(vertexCount) ) {
          dataSrc.setError();
-         return false;
+         return 0;
       }
 
       std::string morphName;
@@ -1974,7 +1974,7 @@
             }
             if( ! dataSrc.ok() ) {
                dataSrc.setError();
-               return false;
+               return 0;
             }
 
             morphTarget->setBlendVertex(blendVertI, Vertex);
--- cal3d/src/cal3d/xmlformat.cpp.orig	2017-03-18 02:03:16.000000000 +0100
+++ cal3d/src/cal3d/xmlformat.cpp	2020-03-22 13:11:26.108988128 +0100
@@ -362,13 +362,13 @@
      if(stricmp(firstChild->Attribute("MAGIC"),Cal::SKELETON_XMLFILE_EXTENSION)!=0)
      {
         CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
      }
 
      if(atoi(firstChild->Attribute("VERSION")) < Cal::EARLIEST_COMPATIBLE_FILE_VERSION )
      {
         CalError::setLastError(CalError::INCOMPATIBLE_FILE_VERSION, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
      }
 
      skeleton = firstChild->NextSiblingElement();
@@ -382,7 +382,7 @@
   if(!skeleton || stricmp(skeleton->Value(),"SKELETON")!=0)
   {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-      return false;
+      return 0;
   }
 
   // allocate a new core skeleton instance
@@ -408,7 +408,7 @@
     if(stricmp(bone->Value(),"BONE")!=0)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
 
     std::string strName=bone->Attribute("NAME");
@@ -433,7 +433,7 @@
     if(!translation || stricmp( translation->Value(),"TRANSLATION")!=0)
     {
       CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-      return false;
+      return 0;
     }
 
     float tx, ty, tz;
@@ -442,13 +442,13 @@
     if(!node)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     cal3d::TiXmlText* translationdata = node->ToText();
     if(!translationdata)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     str.clear();
     str.str("");
@@ -461,7 +461,7 @@
     if(!rotation || stricmp(rotation->Value(),"ROTATION")!=0)
     {
       CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-      return false;
+      return 0;
     }
 
     float rx, ry, rz, rw;
@@ -470,13 +470,13 @@
     if(!node)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     cal3d::TiXmlText* rotationdata = node->ToText();
     if(!rotationdata)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     str.clear();
     str.str("");
@@ -490,7 +490,7 @@
     if(!rotation || stricmp(translationBoneSpace->Value(),"LOCALTRANSLATION")!=0)
     {
       CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-      return false;
+      return 0;
     }
 
     float txBoneSpace, tyBoneSpace, tzBoneSpace;
@@ -499,13 +499,13 @@
     if(!node)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     cal3d::TiXmlText* translationBoneSpacedata = node->ToText();
     if(!translationBoneSpacedata)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     str.clear();
     str.str("");
@@ -518,7 +518,7 @@
     if(!rotationBoneSpace || stricmp(rotationBoneSpace->Value(),"LOCALROTATION")!=0)
     {
       CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-      return false;
+      return 0;
     }
 
     float rxBoneSpace, ryBoneSpace, rzBoneSpace, rwBoneSpace;
@@ -527,13 +527,13 @@
     if(!node)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     cal3d::TiXmlText* rotationBoneSpacedata = node->ToText();
     if(!rotationBoneSpacedata)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     str.clear();
     str.str("");
@@ -546,7 +546,7 @@
     if(!parent ||stricmp(parent->Value(),"PARENTID")!=0)
     {
       CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-      return false;
+      return 0;
     }
 
 
@@ -556,13 +556,13 @@
     if(!node)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     cal3d::TiXmlText* parentid = node->ToText();
       if(!parentid)
     {
     CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
     }
     parentId = atoi(parentid->Value());
 
@@ -610,20 +610,20 @@
       if(stricmp(child->Value(),"CHILDID")!=0)
       {
         CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
       }
 
       cal3d::TiXmlNode *node= child->FirstChild();
       if(!node)
       {
         CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
       }
       cal3d::TiXmlText* childid = node->ToText();
       if(!childid)
       {
         CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
       }
 
       int childId = atoi(childid->Value());
@@ -1058,13 +1058,13 @@
      if(stricmp(firstChild->Attribute("MAGIC"),Cal::ANIMATEDMORPH_XMLFILE_EXTENSION)!=0)
      {
         CalError::setLastError(CalError::INVALID_FILE_FORMAT, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
      }
 
      if(atoi(firstChild->Attribute("VERSION")) < Cal::EARLIEST_COMPATIBLE_FILE_VERSION )
      {
         CalError::setLastError(CalError::INCOMPATIBLE_FILE_VERSION, __FILE__, __LINE__, strFilename);
-        return false;
+        return 0;
      }
 
      animatedMorph = firstChild->NextSiblingElement();
